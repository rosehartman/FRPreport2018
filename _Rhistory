#some critters have barely any individuals, lets combine groups
zoop$Analy[which(zoop$Analy == "Platyhelminthes" | zoop$Analy == "Bivalvia" |
zoop$Analy == "Cumacea" | zoop$Analy == "Arachnida" | zoop$Analy == "Cnidaria" )] = "other"
zoop$Analy[which( zoop$Analy=="terrestrial" | zoop$Analy == "Trichoptera" |
zoop$Analy =="Hymenoptera" |zoop$Analy == "Coleoptera" | zoop$Analy == "Hemiptera" |
zoop$Analy =="Ephemeroptera" | zoop$Analy =="Diptera" |
zoop$Analy =="Odonata" |  zoop$Analy =="Thysanoptera")] = "Insecta"
zoop$Analy[which(zoop$Analy == "corophium" | zoop$Analy == "Gammaridae")] = "Amphipoda"
zoop$AnalyLS = paste(zoop$Analy, zoop$LifeStage)
zoop$AnalyLS[which(zoop$AnalyLS == "other adult" | zoop$AnalyLS == "other larvae" |
zoop$AnalyLS == "other juvenile" | zoop$AnalyLS == "NA NA" |zoop$AnalyLS ==  "Insecta NA")] = "other"
zoop$AnalyLS[which(zoop$AnalyLS == "fish adult" | zoop$AnalyLS == "fish larvae" | zoop$AnalyLS == "fish NA")] = "fish"
zoop$AnalyLS[which(zoop$AnalyLS == "Amphipoda adult" | zoop$AnalyLS == "Amphipoda larvae" )] = "Amphipoda"
zoop$AnalyLS[which(zoop$AnalyLS == "Insecta pupae")] = "Insecta adult"
#how many of each do I got?
zooptax2 = group_by(zoop, AnalyLS) %>% summarise(totaltaxa = sum(CPUE, na.rm = T),
prop = totaltaxa/sum(zoo$CPUE, na.rm = T))
#set up some labels for graphing
zooLab = c("Amphipoda", "Annelida", "Barnacle Nauplii", "Calanoida", "Cal juv", "Cladocera", "Collembola",
"Cyclopoda", "Cyclo juv", "Decapoda", "fish","Gastropoda", "Harpacticoida", "Insect adult", "Insect juv",
"Isopoda", "Mysidea", "Nematoda","Ostracoda", "other", "Rotifera", "Tanaid")
zoop$foo = zoop$AnalyLS
zoop$AnalyLS = factor(zoop$AnalyLS, labels = zooLab)
test = group_by(zoop, AnalyLS, foo) %>% summarise(catch = sum(CPUE))
#Now let's look at what we got!
#############################################################################################################
#filter for just samples from the blitz
zoop$month = month(zoop$Date)
zoop$year = year(zoop$Date)
zooblitz = filter(zoop, month >2 & month <5 & year >2016)
zooblitz = filter(zooblitz, site != "Lindsey" &
site != "Sherman" & site != "Dow" & site != "Wings")
#set up a color pallete
mypal = c(brewer.pal(9, "Set1"), brewer.pal(12, "Set3"), "black", "white", "grey", "pink")
#put zeros back in to get average catch by species
zoowide = dcast(zooblitz, SampleID+Region2+site+Date+month+year+sitetype~AnalyLS,
fun.aggregate = sum, na.rm = T, value.var = "CPUE")
zooblitz0 = melt(zoowide, id.vars = c("SampleID", "site", "Region2","sitetype", "year", "Date", "month"),
variable.name = "AnalyLS", value.name = "CPUE" )
zooave = group_by(zooblitz0, site, sitetype, Region2, AnalyLS, year) %>% summarize(CPUE = mean(CPUE, na.rm = T))
zooave =droplevels(zooave)
#quick plot of CPUE by location
z1 = ggplot(zooave, aes(x=site, y= CPUE))
z1 + geom_bar(stat = "identity", aes(fill = AnalyLS)) + scale_fill_manual(values = mypal) +
coord_cartesian(ylim = c(0, 7000)) + facet_grid(year~Region2, scales = "free")
#relative abundance
z1 + geom_bar(stat = "identity", aes(fill = AnalyLS), position = "fill") +
scale_fill_manual(values = mypal) +
facet_grid(year~Region2, scales = "free_x")
#total CPUE
zootot = group_by(zooblitz0, SampleID, Date, site, year, month,
Region2, sitetype) %>% summarize(CPUE = sum(CPUE, na.rm = T))
z2 = ggplot(zootot, aes(x=site, y= CPUE))
z2+geom_boxplot(aes(fill = sitetype)) + facet_grid(year~Region2, scales = "free")
#Bradmoor had crzy high CPUE.
z2+geom_boxplot(aes(fill = sitetype)) + facet_grid(year~Region2, scales = "free") +
scale_y_log10()
#average total cpue for bar plot
zootot$logCPUE = log(zootot$CPUE)
zoototave = group_by(zootot, site, Region2, sitetype, year) %>%
summarize(mCPUE = mean(CPUE, na.rm = T), seCPUE = sd(CPUE)/length(CPUE),
N = length(CPUE),  mlogCPUE = mean(logCPUE) )
z3 = ggplot(zoototave, aes(x=site, y=mCPUE))
z3 + geom_bar(stat = "identity", aes(fill = sitetype)) +
facet_grid(year~Region2, scales = "free", space = "free_x") +
geom_errorbar(aes(ymin = mCPUE - seCPUE, ymax = mCPUE + seCPUE)) +
scale_fill_manual(values = mypal)+
geom_label(aes(label = paste("n = ", N), y = mCPUE+ 300), label.padding = unit(0.1, "lines"), size = 4) +
ylab("CPUE") + xlab(label = NULL) #+
#coord_cartesian(ylim = c(0,10000))
#log-transformed
z3.1 = ggplot(zoototave, aes(x=site, y=mlogCPUE))
z3.1 + geom_bar(stat = "identity", aes(fill = sitetype2)) +
facet_grid(year~Region2, scales = "free", space = "free_x") +
scale_fill_manual(values = mypal)+
geom_label(aes(label = paste("n = ", N), y = 0), label.padding = unit(0.1, "lines"), size = 4) +
ylab("mean log CPUE") + xlab(label = NULL)
#GLMm of total CPUE ############################ This is probably the best one to use.
zootot$sitetype2 = as.factor(zootot$sitetype2)
zootot$year = as.factor(zootot$year)
zblitz = lmer(logCPUE ~ Region2 + sitetype2 + year + (1|site), data = zootot)
summary(zblitz)
visreg(zblitz)
#Differences by site type, not region
zblitza = glm(log(CPUE) ~ Region2 + sitetype2 + year, data = zootot)
summary(zblitza)
visreg(zblitza)
zblitzb = aov(log(CPUE) ~ Region2 + sitetype2 + year+ Error(site),  data = zootot)
summary(zblitzb)
TukeyHSD(zblitzb)
#GLMm of total CPUE - 2018 only
zblitz18 = lmer(logCPUE ~ Region2 + sitetype2 +(1|site), data = filter(zootot, year == 2018))
summary(zblitz18)
visreg(zblitz18)
#GROSS
#try removing Bradmoor
zblitz18x = lmer(logCPUE ~ Region2 + sitetype2 +(1|site), data = filter(zootot, year == 2018 & site != "Bradmoor"))
summary(zblitz18x)
visreg(zblitz18x)
#huh
#################################################################################
#calculate coefficient of variation in CPUE
zCVs = summarize(group_by(zootot, site), mCPUE = mean(CPUE),
sdCPUE = sd(CPUE), seCPUE = sd(CPUE)/length(CPUE), N = length(SampleID), CV = sdCPUE/mCPUE)
#Calculate average withing-site CV and the CV of within-site means by sampling type.
zmCVs = summarize(zCVs, mCV = mean(CV, na.rm = T), mmCPUE = mean(mCPUE),
sdmCPUE= sd(mCPUE), CV2 = sdmCPUE/mmCPUE)
############################################################################################
#plot of community composition
z4 = ggplot(zooblitz, aes(x=site, y=CPUE))
z4 + geom_bar(stat = "identity", aes(fill = AnalyLS), position = "fill") +
facet_grid(year~Region2, scales = "free", space = "free_x") +
scale_fill_manual(values = c(mypal, "grey"), name = NULL) +
labs(y="Relative Abudance", x=NULL)
#plot of community composition by region
z4 = ggplot(zooblitz, aes(x=Region2, y=CPUE))
z4 + geom_bar(stat = "identity", aes(fill = AnalyLS), position = "fill") +
scale_fill_manual(values = c(mypal, "grey"), labels = zooLab, name = NULL) +
ylab("Relative Abudance") +xlab(label = NULL)
#plot of community composition by site type
z4 = ggplot(zooblitz, aes(x=sitetype2, y=CPUE))
z4 + geom_bar(stat = "identity", aes(fill = AnalyLS), position = "fill") +
scale_fill_manual(values = c(mypal, "grey"), labels = zooLab, name = NULL) +
ylab("Relative Abudance") +xlab(label = NULL)
#Community matrix by CPUE
zMat = zoowide[,8:28]
#now by proprotions
zMatp = zMat/rowSums(zMat)
#PerMANOVA
za1 = adonis(zMatp~ Region2 + sitetype2 + year, data = zootot)
za1
#region and site type are both significant, and year
zNMDS = metaMDS(zMatp, try = 1000)
zNMDS
#no convergent solutions
#but let's graph it anyway!
zootot$Region2 = as.factor(zootot$Region2)
source("PlotNMDS.R")
PlotNMDS(zNMDS, data = zootot, group = "Region2")
zootot$sitetype2 = as.factor(zootot$sitetype2)
PlotNMDS2(zNMDS, data = zootot, group = "sitetype2")
#Hm. Last year, Tule red through everyting off, but now it's all a mess anyway, so that's less of an issue.
#I'm just going to run the 2018 data
#######################################################################################################
#Do just 2018
#Community matrix by CPUE
zMat2018 = filter(zoowide, year != 2017)[,8:27]
#now by proprotions
zMat2018p = zMat2018/rowSums(zMat2018)
zootot2018 = filter(zootot, year != 2017)
#PerMANOVA
za118 = adonis(zMat2018p~ Region2 + sitetype2, data = zootot2018)
za118
#region and site type are both significant,
zNMDS = metaMDS(zMat2018p, try = 1000)
zNMDS
zootot2018$Region2 = droplevels(as.factor(zootot2018$Region2))
zootot2018$sitetype2 = droplevels(as.factor(zootot2018$sitetype2))
source("PlotNMDS.R")
PlotNMDS(zNMDS, data = zootot2018, group = "sitetype2")
PlotNMDS(zNMDS, data = zootot2018, group = "Region2")
########################################################################################################
#Look at catch at Tule Red to figure out what in the "other" category was so dominant
TR = droplevels(filter(zoop, site == "Tule Red"))
TR1 = ggplot(TR, aes(x=CommonName, y = CPUE))
TR1 + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90))
TR2 = ggplot(TR, aes(x=Analy, y = CPUE, fill = CommonName))
TR2 + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90))
others = filter(TR, Analy == "other")
TR3 = ggplot(others, aes(x = CommonName, y = CPUE))
TR3 + geom_bar(stat = "identity")
#check Grizzly bay too
griz = droplevels(filter(zoop, site == "Grizzly"))
gr = ggplot(griz, aes(x=CommonName, y = CPUE))
gr + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90))
others = filter(griz, Analy == "other")
gr3 = ggplot(others, aes(x = CommonName, y = CPUE))
gr3 + geom_bar(stat = "identity")
zblitz = lmer(logCPUE ~ Region2 + sitetype2 + year + (1|site), data = zootot, na.action = na.fail)
View(zootot)
#GLMm of total CPUE ############################ This is probably the best one to use.
zootot$sitetype = as.factor(zootot$sitetype)
zootot$year = as.factor(zootot$year)
zblitz = lmer(logCPUE ~ Region2 + sitetype + year + (1|site), data = zootot, na.action = na.fail)
summary(zblitz)
dredge(zblitz)
summary(zblitz)
source("blitz2/blitzclean.R")
library(MuMIn)
#Linear mixed model of log total CPUE, as predicted by Region2, and Site Type and year.
#Just the clams
ben.1$logtot = log(ben.1$tCPUE+1)
ben.1$Year2 = as.factor(year(ben.1$Date))
cl = lmer(logtot ~ sitetype+ Region2  + Year2+ (1|site),
data = ben.1, na.action = "na.fail")
summary(cl)
visreg(cl)
data = ben.1)
summary(cl2)
TukeyHSD(cl2)
dredge(cl)
library(dplyr)
library(ggplot2)
library(reshape2)
library(vegan)
library(RColorBrewer)
source("phytoplankton/phytosblitz2018.R")
chla = GetFRPdata(path, type = "chlorophyll")
stations = read_xlsx("blitz2/Stations2.xlsx")
chla1 = merge(chla, stations)
chla1 = filter(chla1, site != "Dow" & site != "Lindsey" & site != "Wings", Chlorophyll >=0 & month(Date) >2 & month(Date) <6 & year(Date) == 2018)
chla1$logchla = log(chla1$Chlorophyll)
ph = lmer(log(Chlorophyll)~ sitetype + Region2 +(1|site), data = chla1)
summary(ph)
visreg(ph)
View(chla1)
ph = lmer(log(Chlorophyll)~ sitetype + Region2 + Date +(1|site), data = chla1)
summary(ph)
ph = lmer(log(Chlorophyll)~ sitetype + Region2 + month(Date) +(1|site), data = chla1)
summary(ph)
ph = lmer(log(Chlorophyll)~ sitetype + Region2 + Date +(1|site), data = chla1, na.action = na.fail)
dredge(ph)
ph1 = lmer(log(Chlorophyll)~ sitetype + (1|site), data = chla1, na.action = na.fail)
summary(ph1)
#plot of community composition
z4 = ggplot(zooblitz, aes(x=site, y=CPUE))
z4 + geom_bar(stat = "identity", aes(fill = AnalyLS), position = "fill") +
facet_grid(year~Region2, scales = "free", space = "free_x") +
scale_fill_manual(values = c(mypal, "grey"), name = NULL) +
labs(y="Relative Abudance", x=NULL)
#plot of community composition by region
z4 = ggplot(zooblitz, aes(x=Region2, y=CPUE))
z4 + geom_bar(stat = "identity", aes(fill = AnalyLS), position = "fill") +
scale_fill_manual(values = c(mypal, "grey"), labels = zooLab, name = NULL) +
ylab("Relative Abudance") +xlab(label = NULL)
#plot of community composition by site type
z4 = ggplot(zooblitz, aes(x=sitetype2, y=CPUE))
z4 + geom_bar(stat = "identity", aes(fill = AnalyLS), position = "fill") +
scale_fill_manual(values = c(mypal, "grey"), labels = zooLab, name = NULL) +
ylab("Relative Abudance") +xlab(label = NULL)
#Community matrix by CPUE
zMat = zoowide[,8:28]
#now by proprotions
zMatp = zMat/rowSums(zMat)
#PerMANOVA
za1 = adonis(zMatp~ Region2 + sitetype2 + year, data = zootot)
za1
#region and site type are both significant, and year
zNMDS = metaMDS(zMatp, try = 1000)
zNMDS
za1
#PerMANOVA
za1 = adonis(zMatp~ Region2 + sitetype2 + year, data = zootot)
#PerMANOVA
za1 = adonis(zMatp~ Region2 + sitetype + year, data = zootot)
za1
a0 = adonis(Mat2p~ sitetype + year +Region2+ site, strata = Mat$Region2, data = Mat)
a0
a0 = adonis(Mat2p~ sitetype + year +Region2/site, strata = Mat$Region2, data = Mat)
a0
a0 = adonis(Mat2p~ sitetype + year +site/Region2, strata = Mat$Region2, data = Mat)
a0
a0 = adonis(Mat2p~ sitetype + year +Region2/site, strata = Mat$Region2, data = Mat)
a0
#PerMANOVA
za1 = adonis(zMatp~ Region2 + sitetype + year + site, data = zootot)
za1
a0 = adonis(Mat2p~ sitetype + year +Region2/site, strata = Mat$Region2, data = Mat)
a0
source("blitz2/blitzclean.R")
#community data matrix
#Get rid of the first row (with sample IDs)
row.names(ComMat.1) = ComMat.1$SampleID
ComMat2.1 = ComMat.1[,2:ncol(ComMat.1)]
ComMat2.1 = ComMat2.1[which(bugstot$targets2 != "benthic"),]
#EAV2-14FEB2017 is giving us trouble. I'm going to take it out
ComMat2.1 = ComMat2.1[which(bugstot$SampleID!= "EAV2-14FEB2017"),]
#get rit of empty rows
ComMat2.2 = ComMat2.1[which(rowSums(ComMat2.1)!=0),]
#get rid of PVCs and ponars
bugstot2 = filter(bugstot, targets2 != "benthic" & SampleID != "EAV2-14FEB2017")[which(rowSums(ComMat2.1)!=0),]
#make a matrix based on proportion of total catch for each sample
ComMatp.1 = ComMat2.2/rowSums(ComMat2.2)
####################################################################################
#now do it for the smaller groups
#Get rid of the first row (with sample IDs)
row.names(ComMat.2) = ComMat.2$SampleID
ComMat.22 = ComMat.2[,2:ncol(ComMat.2)]
ComMat.22 = ComMat.22[which(bugstot$targets2 != "benthic"),]
#EAV2-14FEB2017 is giving us trouble. I'm going to take it out
ComMat.22 = ComMat.22[which(bugstot$SampleID!= "EAV2-14FEB2017"),]
#get rit of empty rows
ComMat.22 = ComMat.22[which(rowSums(ComMat.22)!=0),]
#make a matrix based on proportion of total catch for each sample
ComMat.22p = ComMat.22/rowSums(ComMat.22)
#now do it for the common names
#Get rid of the first row (with sample IDs)
row.names(ComMat.CN) = ComMat.CN$SampleID
Com.CN2 = ComMat.CN[,2:ncol(ComMat.CN)]
Com.CN2 = Com.CN2[which(bugstot$targets2 != "benthic"),]
#EAV2-14FEB2017 is giving us trouble. I'm going to take it out
Com.CN2 = Com.CN2[which(bugstot$SampleID!= "EAV2-14FEB2017"),]
#get rit of empty rows
Com.CN2 = Com.CN2[which(rowSums(Com.CN2)!=0),]
#make a matrix based on proportion of total catch for each sample
Com.CN2p = Com.CN2/rowSums(Com.CN2)
#now do it for the cleaned up common names
#Get rid of the first row (with sample IDs)
row.names(ComMat.CN2) = ComMat.CN2$SampleID
Com.CN3 = ComMat.CN2[,2:ncol(ComMat.CN2)]
Com.CN3 = Com.CN3[which(bugstot$targets2 != "benthic"),]
#EAV2-14FEB2017 is giving us trouble. I'm going to take it out
Com.CN3 = Com.CN3[which(bugstot$SampleID!= "EAV2-14FEB2017"),]
#get rit of empty rows
Com.CN3 = Com.CN3[which(rowSums(Com.CN3)!=0),]
#make a matrix based on proportion of total catch for each sample
Com.CN3p = Com.CN3/rowSums(Com.CN3)
##############################################################################
#look at multivariates
#First look at the "Analy2" version, with proportional catch
a1 = adonis(ComMatp.1 ~ Region2 + sitetype + site/targets2, strata = bugstot2$Region2, data = bugstot2)
a1
#we only had one trawl in a diked wetland, so I am taking tha out
mys.2x = filter(mys.2x, site != "Bradmoor")
ComMatnx = dcast(mys.2x, formula = SampleID~Analy2, value.var="CPUE",
fun.aggregate = sum, fill = 0)
row.names(ComMatnx) = ComMatnx$SampleID
ComMat2nx = ComMatnx[,2:ncol(ComMatnx)]
mys.1x = mys.1[which(rowSums(ComMat2nx )!=0),]
ComMat2nx = ComMat2nx[which(rowSums(ComMat2nx )!=0),]
#make one based on proportion of total catch for each sample
ComMatpnx = ComMat2nx/rowSums(ComMat2nx)
#PERMANOVA with relative abundance
pn1 = adonis(ComMatpnx~ sitetype+year + Region2/site, strata = mys.1x$Region2, data = mys.1x)
#PERMANOVA with relative abundance
pn1 = adonis(ComMatpnx~ sitetype+Year + Region2/site, strata = mys.1x$Region2, data = mys.1x)
View(mys.1x)
#PERMANOVA with relative abundance
mys.1x$Year = year(mys.1x$Date)
pn1 = adonis(ComMatpnx~ sitetype+Year + Region2/site, strata = mys.1x$Region2, data = mys.1x)
pn1
#PERMANOVA with relative abundance
neu.1$Year = year(neu.1$Date)
pn1 = adonis(ComMatpn~sitetype +Year+ Region2/site, strata = neu.1$Region2, data = neu.1)
neu.2x = filter(neu.2x, tcount > 3)
ComMatn = dcast(neu.2x, formula = SampleID~Analy2, value.var="CPUE",
fun.aggregate = sum, fill = 0)
row.names(ComMatn) = ComMatn$SampleID
ComMat2n = ComMatn[,2:ncol(ComMatn)]
#make one based on proportion of total catch for each sample
ComMatpn = ComMat2n/rowSums(ComMat2n)
#PERMANOVA with relative abundance
neu.1$Year = year(neu.1$Date)
pn1 = adonis(ComMatpn~sitetype +Year+ Region2/site, strata = neu.1$Region2, data = neu.1)
pn1
View(neu.1)
neu.2x = filter(neu.2x, tcount > 3)
ComMatn = dcast(neu.2x, formula = SampleID~Analy2, value.var="CPUE",
fun.aggregate = sum, fill = 0)
row.names(ComMatn) = ComMatn$SampleID
ComMat2n = ComMatn[,2:ncol(ComMatn)]
#make one based on proportion of total catch for each sample
ComMatpn = ComMat2n/rowSums(ComMat2n)
#we only had one trawl in a diked wetland, so I am taking tha out
mys.2x = filter(mys.2x, site != "Bradmoor")
ComMatMx = dcast(mys.2x, formula = SampleID~Analy2, value.var="CPUE",
fun.aggregate = sum, fill = 0)
row.names(ComMatMx) = ComMatMx$SampleID
ComMat2Mx = ComMatMx[,2:ncol(ComMatMx)]
mys.1x = mys.1[which(rowSums(ComMat2Mx )!=0),]
ComMat2Mx = ComMat2nx[which(rowSums(ComMat2Mx )!=0),]
#make one based on proportion of total catch for each sample
ComMatpMx = ComMat2nx/rowSums(ComMat2Mx)
#PERMANOVA with relative abundance
mys.1x$Year = year(mys.1x$Date)
pn1 = adonis(ComMatpMx~ sitetype+Year + Region2/site, strata = mys.1x$Region2, data = mys.1x)
pn1
View(mys.1x)
View(neu.1)
#neuston
#community data matrix
#I'm goig to try filtering out anything with less than three individuals
neu.2x = filter(neu.2x, tcount > 3)
ComMatn = dcast(neu.2x, formula = SampleID~Analy2, value.var="CPUE",
fun.aggregate = sum, fill = 0)
row.names(ComMatn) = ComMatn$SampleID
ComMat2n = ComMatn[,2:ncol(ComMatn)]
#make one based on proportion of total catch for each sample
ComMatpn = ComMat2n/rowSums(ComMat2n)
#PERMANOVA with relative abundance
neu.1$Year = year(neu.1$Date)
pn1 = adonis(ComMatpn~sitetype +Year+ Region2/site, strata = neu.1$Region2, data = neu.1)
pn1
View(neu.2x)
anti_join(neu.1, ComMatn)
neu.1 = filter(neu.1, tcount >3)
pn1 = adonis(ComMatpn~sitetype +Year+ Region2/site, strata = neu.1$Region2, data = neu.1)
pn1
#community data matrix
sweeps.2xx = filter(sweeps.2x, SampleID != "EAV2-14FEB2017" & tcount >3)
ComMatsw = dcast(sweeps.2xx, formula = SampleID~Analy2, value.var="CPUE",
fun.aggregate = sum, fill = 0)
row.names(ComMatsw) = ComMatsw$SampleID
ComMat2sw = ComMatsw[,2:ncol(ComMatsw)]
#EAV2-14FEB2017 is giving us trouble. I'm going to take it ou
sw.1x = filter(sweeps.1[which(sweeps.1$tCPUE!=0),], SampleID != "EAV2-14FEB2017" & tcount>3)
ComMat2sw = ComMat2sw[which(rowSums(ComMat2sw, na.rm=T)!=0),]
#make one based on proportion of total catch for each sample
ComMatpsw = ComMat2sw/rowSums(ComMat2sw)
#PERMANOVA with relative abundance
psw1 = adonis(ComMatpsw~Region2+sitetype+site, data = sw.1x)
psw1
#PERMANOVA with relative abundance
sw.1x$Year = year(sw.1x$Date)
psw1 = adonis(ComMatpsw~sitetype+ Year+ Region2/site, data = sw.1x)
psw1
psw1 = adonis(ComMatpsw~sitetype+ Year+ targets+ Region2/site, data = sw.1x)
View(sw.1x)
psw1 = adonis(ComMatpsw~sitetype+ Year+ Target+ Region2/site, data = sw.1x)
psw1
za1
#quick plot of CPUE by location
z1 = ggplot(zooave, aes(x=site, y= CPUE))
z1 + geom_bar(stat = "identity", aes(fill = AnalyLS)) + scale_fill_manual(values = mypal) +
coord_cartesian(ylim = c(0, 7000)) + facet_grid(year~Region2, scales = "free")
#relative abundance
z1 + geom_bar(stat = "identity", aes(fill = AnalyLS), position = "fill") +
scale_fill_manual(values = mypal) +
facet_grid(year~Region2, scales = "free_x")
#set up a theme
mytheme = theme(strip.text.x = element_text(size=14),strip.text.y = element_text(size=18),
axis.text.x  = element_text(angle=90, hjust=1, vjust = 0.5, size=12),
axis.title.y  = element_text(size=16),
axis.title.x  = element_text(size = 16), axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.title=element_blank(), legend.background =element_blank())
#relative abundance
z1 + geom_bar(stat = "identity", aes(fill = AnalyLS), position = "fill") +
scale_fill_manual(values = mypal) +
facet_grid(year~Region2, scales = "free_x") + mytheme
#total CPUE
zootot = group_by(zooblitz0, SampleID, Date, site, year, month,
Region2, sitetype) %>% summarize(CPUE = sum(CPUE, na.rm = T))
z2 = ggplot(zootot, aes(x=site, y= CPUE))
z2+geom_boxplot(aes(fill = sitetype)) + facet_grid(year~Region2, scales = "free")
#Bradmoor had crzy high CPUE.
z2+geom_boxplot(aes(fill = sitetype)) + facet_grid(year~Region2, scales = "free") +
scale_y_log10()
#average total cpue for bar plot
zootot$logCPUE = log(zootot$CPUE)
zoototave = group_by(zootot, site, Region2, sitetype, year) %>%
summarize(mCPUE = mean(CPUE, na.rm = T), seCPUE = sd(CPUE)/length(CPUE),
N = length(CPUE),  mlogCPUE = mean(logCPUE) )
z3 = ggplot(zoototave, aes(x=site, y=mCPUE))
z3 + geom_bar(stat = "identity", aes(fill = sitetype)) +
facet_grid(year~Region2, scales = "free", space = "free_x") +
geom_errorbar(aes(ymin = mCPUE - seCPUE, ymax = mCPUE + seCPUE)) +
scale_fill_manual(values = mypal)+
geom_label(aes(label = paste("n = ", N), y = mCPUE+ 300), label.padding = unit(0.1, "lines"), size = 4) +
ylab("CPUE") + xlab(label = NULL) #+
#log-transformed
z3.1 = ggplot(zoototave, aes(x=site, y=mlogCPUE))
z3.1 + geom_bar(stat = "identity", aes(fill = sitetype2)) +
facet_grid(year~Region2, scales = "free", space = "free_x") +
scale_fill_manual(values = mypal)+
geom_label(aes(label = paste("n = ", N), y = 0), label.padding = unit(0.1, "lines"), size = 4) +
ylab("mean log CPUE") + xlab(label = NULL)
z3.1 + geom_bar(stat = "identity", aes(fill = sitetype)) +
facet_grid(year~Region2, scales = "free", space = "free_x") +
scale_fill_manual(values = mypal)+
geom_label(aes(label = paste("n = ", N), y = 0), label.padding = unit(0.1, "lines"), size = 4) +
ylab("mean log CPUE") + xlab(label = NULL)
zoototave = group_by(zootot, site, Region2, sitetype, year) %>%
summarize(mCPUE = mean(CPUE, na.rm = T), seCPUE = sd(CPUE)/length(CPUE),
N = length(CPUE),  mlogCPUE = mean(logCPUE), selCPUE = sd(logCPUE)/length(logCPUE) )
z3.1 + geom_bar(stat = "identity", aes(fill = sitetype)) +
geom_errorbar(aes(ymin = mlogCPUE - selCPUE, ymax = mlogCPUE + selCPUE)) +
facet_grid(year~Region2, scales = "free", space = "free_x") +
scale_fill_manual(values = mypal)+
geom_label(aes(label = paste("n = ", N), y = 0), label.padding = unit(0.1, "lines"), size = 4) +
ylab("mean log CPUE") + xlab(label = NULL)
zoototave = group_by(zootot, site, Region2, sitetype, year) %>%
summarize(mCPUE = mean(CPUE, na.rm = T), seCPUE = sd(CPUE)/length(CPUE),
N = length(CPUE),  mlogCPUE = mean(logCPUE), selCPUE = sd(logCPUE)/length(logCPUE) )
z3 = ggplot(zoototave, aes(x=site, y=mCPUE))
z3 + geom_bar(stat = "identity", aes(fill = sitetype)) +
facet_grid(year~Region2, scales = "free", space = "free_x") +
geom_errorbar(aes(ymin = mCPUE - seCPUE, ymax = mCPUE + seCPUE)) +
scale_fill_manual(values = mypal)+
geom_label(aes(label = paste("n = ", N), y = mCPUE+ 300), label.padding = unit(0.1, "lines"), size = 4) +
ylab("CPUE") + xlab(label = NULL) #+
#log-transformed
z3.1 = ggplot(zoototave, aes(x=site, y=mlogCPUE))
z3.1 + geom_bar(stat = "identity", aes(fill = sitetype)) +
geom_errorbar(aes(ymin = mlogCPUE - selCPUE, ymax = mlogCPUE + selCPUE)) +
facet_grid(year~Region2, scales = "free", space = "free_x") +
scale_fill_manual(values = mypal)+
geom_label(aes(label = paste("n = ", N), y = 0), label.padding = unit(0.1, "lines"), size = 4) +
ylab("mean log CPUE") + xlab(label = NULL)
z3 + geom_bar(stat = "identity", aes(fill = sitetype)) +
facet_grid(year~Region2, scales = "free", space = "free_x") +
geom_errorbar(aes(ymin = mCPUE - seCPUE, ymax = mCPUE + seCPUE)) +
scale_fill_manual(values = mypal)+
geom_label(aes(label = paste("n = ", N), y = mCPUE+ 300), label.padding = unit(0.1, "lines"), size = 4) +
ylab("CPUE") + xlab(label = NULL) +
scale_y_log10()
z3.1 + geom_bar(stat = "identity", aes(fill = sitetype)) +
geom_errorbar(aes(ymin = mlogCPUE - selCPUE, ymax = mlogCPUE + selCPUE)) +
facet_grid(year~Region2, scales = "free", space = "free_x") +
scale_fill_manual(values = mypal)+
geom_label(aes(label = paste("n = ", N), y = 0), label.padding = unit(0.1, "lines"), size = 4) +
ylab("mean log CPUE") + xlab(label = NULL) + mytheme
